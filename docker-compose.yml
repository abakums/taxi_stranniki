version: '2.2'

services:
#  nginx:
#    container_name: nginx
#    build:
#      context: .
#      dockerfile: docker/Dockerfile.nginx
#    restart: always
#    volumes:
#      - static-files:/var/html/static:ro
#    depends_on:
#      - django
#    ports:
#      - "465:465"
#      - "587:587"
#      - "80:80"
#      - "443:443"
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "1"

  django:
    container_name: django
    build:
      context: .
      dockerfile: ./docker/Dockerfile.django
    restart: always
    command: [ "./django_entrypoint.sh" ]
    env_file:
      - ./.env
    depends_on:
      - database
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"

  react:
    container_name: react
    build:
      context: .
      dockerfile: ./docker/Dockerfile.react
    ports:
      - "3000:3000"
    depends_on:
      - django
    volumes:
      - ./frontend:/frontend
      - ./frontend/node_modules:/frontend/node_modules
      - ./frontend/.next:/frontend/.next
    restart: always

  database:
    image: postgres:13-alpine
    container_name: database
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - ./db/:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    expose:
      - 5432

volumes:
  static-files: null
  db-data: null
